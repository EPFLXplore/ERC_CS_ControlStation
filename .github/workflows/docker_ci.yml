name: Docker CI

on:
  push:
    branches: ["humble"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: epflxplore/cs

jobs:
  # This workflow contains multiple jobs
  build_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: "true"
          token: ${{ secrets.TOKEN }}

      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      # install applicaion dependencies
      - name: Install dependencies
        run: |
          npm cache clean --force
          rm -rf node_modules
          rm -rf package-lock.json
          npm install
          npm ci
        working-directory: ./cs_ws/src/control_station_pkg/control_station_pkg/csApp/frontend

      # build and test the apps
      - name: build
        run: |
          npm run build
          npm run test --passWithNoTests
        working-directory: ./cs_ws/src/control_station_pkg/control_station_pkg/csApp/frontend
        env:
          CI: false

  build-and-push-image:
    runs-on: ubuntu-latest

    # build docker image and push to docker hub
    # only if the app build and test successfully
    needs: [build_test]

    strategy:
      fail-fast: true
      matrix:
        node-version: [16]
        include:
          - dockerfile: ./docker_foxy_desktop/Dockerfile
            context: .
            tag: humble-desktop
            platform: linux/amd64

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: "true"
          token: ${{ secrets.TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          file: ${{ matrix.dockerfile }}
          context: ${{ matrix.context }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.tag }}
          platforms: ${{ matrix.platform }}
          no-cache: true
          pull: true
          push: true
