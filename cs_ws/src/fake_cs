import rclpy
from rclpy.node import Node
#from geometry_msgs.msg import Twist
import evdev
import threading
from time import sleep
#from std_msgs.msg import Float64MultiArray, Float32MultiArray, Int8, Boofrom kerby_interfaces.msg import Task
import math

def clean(x):
    epsilon = 0.09
    return 0 if abs(x) < epsilon else x

def str_pad(x, length = 10):
    s = str(x)
    if len(s) >= length:
        return s[:length]
    return s + " " * (length -len(s))

def add(l1: list, l2: list):
    return [x+y for x, y in zip(l1, l2)]

def normalized(l):
    n = math.sqrt(sum(x**2 for x in l))
    if n == 0:
        return l
    return [x/n for x in l]

class Inft_Timer():
    def __init__(self, t, target):
        self.t = t
        self.target = target
        self.thread = threading.Timer(self.t, self.handler)

    def handler(self):
        self.target()
        self.thread = threading.Timer(self.t, self.handler)
        self.thread.start()


    def start(self):
        self.thread = threading.Timer(self.t, self.handler)
        self.thread.start()
    
    def cancel(self):
        self.thread.cancel()



def main():
    rclpy.init()
    node = Gamepad()

    #Spin in a separate thread
    thread = threading.Thread(target=rclpy.spin, args=(node, ), daemon=True)
    thread.start()

    try:
        node.read_gamepad()
    except KeyboardInterrupt:
        pass

    rclpy.shutdown()
    thread.join()

if __name__ == '__main__':
    main()


